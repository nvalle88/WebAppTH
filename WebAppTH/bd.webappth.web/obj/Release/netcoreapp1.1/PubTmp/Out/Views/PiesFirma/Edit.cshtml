@model bd.webappth.entidades.Negocio.PieFirma

@{
    ViewData["Title"] = "Pie de Firma";
}

<link rel="stylesheet" href="~/lib/select2/dist/css/select2.min.css" />
<link rel="stylesheet" href="~/lib/select2/dist/css/select2.min.css" />
<script src='~/js/site.js'></script>
<!-- MAIN CONTENT -->
<div id="content">
    <div class="col col-10">
        @if (@ViewData["Error"].ToString() != "")

        {

            <div class="col-lg-10">
                <div class="alert alert-block alert-dismissable">
                    <a class="close" data-dismiss="alert" href="#"><p>X</p></a>
                    <h4 class="alert-heading"><i class="fa fa-check-square-o"></i>Informaci&oacute;n!</h4>
                    <p>
                        <span class="text-danger"><strong><bold> @ViewData["Error"]</bold></strong></span>
                    </p>
                </div>
            </div>

        }
    </div>
    <!-- widget grid -->
    <section id="widget-grid" class="">

        <!-- START ROW -->
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-10">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false">

                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Pie de Firma</h2>
                    </header>
                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body no-padding">

                            <form asp-action="Edit" id="checkout-form" class="smart-form" novalidate="novalidate">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <input type="hidden" asp-for="IdPieFirma" />
                                @{await Html.RenderPartialAsync("_PartialViewPiesFirma");}
                                <footer>
                                    <input type="submit" value="Guardar" class="btn btn-primary" />
                                    <a asp-action="Index" class="btn btn-default">Cancelar</a>
                                </footer>
                            </form>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->
                </div>
                <!-- end widget -->

            </article>

        </div>
        <!-- END ROW -->
    </section>
    <!-- end widget grid -->
    <!-- Modal -->

</div>
<!-- END MAIN CONTENT -->
@{await Html.RenderPartialAsync("Modal");}

@section Scripts {
    <link rel="stylesheet" href="~/lib/select2/dist/css/select2.min.css" />
    <link rel="stylesheet" href="~/lib/select2/dist/css/select2.min.css" />
    @*<script src='~/lib/select2/dist/js/i18n/es.js'></script>*@
    <script src='~/js/site.js'></script>
    <script src='~/js/vistasmodales/modal.js'></script>
    <script type="text/javascript">
        $(document).ready(function () {
            Init_Select2();
        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {

            $("#ciudad").change(function () {

                $("#sucursal").empty();
                $("#dependencia").val("");
                $("#manualpuesto").empty();
                $("#rolpuesto").empty();
                $("#escalagrados").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ListarSucursalesPorCiudad", "CeseFunciones")',
                    dataType: 'json',
                    data: { idciudad: $("#ciudad").val() },
                    success: function (data) {
                        $("#sucursal").append('<option value="0" selected="" disabled="">Seleccione</option>');
                        $.each(data, function (i, data) {
                            $("#sucursal").append('<option value="'
                                + data.idSucursal + '">'
                                + data.nombre + '</option>');

                        });
                    }, complete: function (data) {

                    },

                    error: function (ex) {
                        alert('Failed to retrieve data.' + ex);
                    }
                });
                return false;
            })

            $("#sucursal").change(function (e) {

                $("#dependencia").val("");
                $("#manualpuesto").empty();
                $("#rolpuesto").empty();
                $("#escalagrados").empty();
                e.preventDefault();
                var $link = $(this);
                var title = $link.text();
                $('#myModal.modal-title').html(title);
                var url = '@Url.Action("CargarDependencias","Dependencias")?idsucursal=' + $('#sucursal').val();
                if (url.indexOf('#') == 0) {
                    $('#myModal').modal('show');
                    $("#myModal").waitMe("hide");
                }
                else {
                    $.get(url, function (data) {
                        $('#myModal .te').html(data);
                        $('#myModal').modal();
                        $('#selectC').select2();
                    }).success(function () { $('input:text:visible:first').focus(); });

                }

                return false;
            })
            $("#manualpuesto").change(function () {

                $("#rolpuesto").empty();
                $("#escalagrados").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ListarRolPuestoporManualPuesto","Empleados")',
                    dataType: 'json',
                    data: {
                        idmanualpuesto: $("#manualpuesto").val(),
                        iddependencia: $("#iddependencia").val(),
                    },
                    success: function (data) {
                        $("#rolpuesto").append('<option value="0" selected="" disabled="">Seleccione</option>');
                        $.each(data, function (i, data) {
                            $("#rolpuesto").append('<option value="'
                                + data.rolPuesto.idRolPuesto + '">'
                                + data.rolPuesto.nombre + '</option>');

                        });
                    }, complete: function (data) {

                    },

                    error: function (ex) {
                        alert('Failed to retrieve data.' + ex);
                    }
                });
                return false;
            })


            $("#rolpuesto").change(function () {

                $("#escalagrados").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ListarEscalaGradosPorRolPuesto","Empleados")',
                    dataType: 'json',
                    data: {
                        idmanualpuesto: $("#manualpuesto").val(),
                        iddependencia: $("#iddependencia").val(),
                        idrolpuesto: $("#rolpuesto").val(),
                    },
                    success: function (data) {
                        if (data[0].escalaGrados.grado !== null) {
                            $("#escalagrados").append('<option value="0" selected="" disabled="">Seleccione</option>');
                            $.each(data, function (i, data) {

                                $("#escalagrados").append('<option value="'
                                    + data.escalaGrados.idEscalaGrados + '">'
                                    + data.escalaGrados.nombre + " (Grado " + data.escalaGrados.grado + ")" + " que percibe" + " $" + data.escalaGrados.remuneracion + '</option>');
                            });
                        }
                        else {
                            $("#escalagrados").append('<option value="'
                                + 0 + '">'
                                + "No aplica" + '</option>');

                        }
                    }, complete: function (data) {

                    },

                    error: function (ex) {
                        alert('Failed to retrieve data.' + ex);
                    }
                });
                return false;
            });
        });
    </script>
    <script type="text/javascript">

        function checkIt(evt) {
            evt = (evt) ? evt : window.event
            var charCode = (evt.which) ? evt.which : evt.keyCode
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                status = "This field accepts numbers only."
                return false
            }
            status = ""
            return true
        }
        function NumCheck(e, field) {
            key = e.keyCode ? e.keyCode : e.which
            // backspace
            if (key == 8) return true
            // 0-9
            if (key > 47 && key < 58) {
                if (field.value == "") return true
                regexp = /.[0-9]{10}$/
                return !(regexp.test(field.value))
            }
            // .
            if (key == 44) {
                if (field.value == "") return false
                regexp = /^[0-9]+$/
                return regexp.test(field.values)
            }
            // other key
            return false

        }

        function handleChange(input) {
            if (input.value < 0) input.value = 0;
            if (input.value > 100) input.value = 100;
        }


            function cargarManualesPuesto(dependencia) {

            $("#manualpuesto").empty();
            $("#rolpuesto").empty();
            $("#escalagrados").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ListarManualPuestoporDependencia", "Empleados")',
                    dataType: 'json',
                    data: { iddependencia: dependencia },
                    success: function (data) {
                        $("#manualpuesto").append('<option value="0" selected="" disabled="">Seleccione</option>');
                        $.each(data, function (i, data) {
                            $("#manualpuesto").append('<option value="'
                                + data.manualPuesto.idManualPuesto + '">'
                                + data.manualPuesto.nombre + '</option>');

                        });
                    }, complete: function (data) {
                    },

                    error: function (ex) {
                        alert('Failed to retrieve data.' + ex);
                    }
                });
                return false;
                }
    </script>
}

}
