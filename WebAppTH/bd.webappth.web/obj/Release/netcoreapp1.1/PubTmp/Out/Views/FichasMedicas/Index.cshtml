@model bd.webappth.entidades.ViewModels.FichaMedicaViewModel
@using bd.webappth.entidades.Negocio
<link href="~/css/tabla/table.css" rel="stylesheet" />

@{
    ViewData["Title"] = "Historia clínica ocupacional";

}

@{ var modelo = new FichaMedica();

    modelo.IdPersona = Model.DatosBasicosPersonaViewModel.IdPersona;
}


<style>

    #DatosPersonales {
        visibility: hidden;
    }

    .labels {
        text-align: left;
        font-weight: bold;
        color: black;
        background-color: transparent;
        width: 50%;
        height: 50px;
        float: left;
        border-color: black;
        border-width: 0px;
    }


        .labels input {
            font-weight: 100;
            background-color: transparent;
        }

    input.label-data {
        text-align: left;
        width: 48%;
        color: black;
        background-color: transparent;
        border-width: 0px;
        /*margin-left:50%;*/
        float: right;
        padding-right: 5px;
    }

    .cont-div {
        text-align: left;
        width: 48%;
        color: black;
        background-color: transparent;
        border-width: 0px;
        /*margin-left:50%;*/
        float: right;
        padding-right: 5px;
    }
</style>

@{await Html.RenderPartialAsync("_PartialViewMenu", modelo);}

<!-- MAIN CONTENT -->
<div id="content">


    <br />

    @if (@ViewData["Error"].ToString() != "")

    {

        <div class="col-lg-12">
            <div class="alert alert-block alert-dismissable">
                <a class="close" data-dismiss="alert" href="#"><p>X</p></a>
                <h4 class="alert-heading"><i class="fa fa-check-square-o"></i>Informaci&oacute;n!</h4>
                <p>
                    <span class="text-danger"><strong><bold> @ViewData["Error"]</bold></strong></span>
                </p>
            </div>
        </div>

    }

    <br />
    &nbsp;

    <div class="input">
        @Html.DisplayName("Nuevo paciente"):<br />
        <form asp-action="Index" id="checkout-form" class="smart-form" novalidate="novalidate">
            <input type="hidden" asp-for="DatosBasicosPersonaViewModel.IdPersona" value="0" />

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="submit" value="Ingresar cédula" style="height:30px;width:100px;float:left;" />
            <input type="text" asp-for="DatosBasicosPersonaViewModel.Identificacion" class="form-control" style="width:100px;padding-left:5px;" />


        </form>

    </div>
    <br />
    <br />

    <section id="DatosPersonales" class="">

        <!-- START ROW -->
        <div class="row">
            <!-- NEW COL START -->
            <article class="col-sm-12 col-md-12 col-lg-12">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false">
                    <!--
                    <header>
                        <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                        <h2>Exámen complementario</h2>
                    </header>
                    -->
                    <!-- widget div-->
                    <div>

                        <div class="widget-body no-padding">


                            <div class="row" style="float:none;margin-left:2%;">
                                <section class="col col-lg-12">

                                    <legend>Datos Generales</legend>

                                    <br />

                                    <section>

                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.NombresApellidos):
                                            <input asp-for="DatosBasicosPersonaViewModel.NombresApellidos" readonly class="label-data" />
                                        </div>

                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.LugarNacimiento):
                                            <input asp-for="DatosBasicosPersonaViewModel.LugarNacimiento" readonly class="label-data" />
                                        </div>

                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.FechaNacimiento):
                                            <input asp-for="DatosBasicosPersonaViewModel.FechaNacimiento" readonly class="label-data" data-dateformat='dd/mm/yy' />
                                        </div>

                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.FechaIngreso):
                                            <input type="date" class="label-data" asp-for="DatosBasicosPersonaViewModel.FechaIngreso" data-dateformat='dd/mm/yy' readonly />
                                        </div>

                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.DireccionDomiciliaria):
                                            <input asp-for="DatosBasicosPersonaViewModel.DireccionDomiciliaria" readonly class="label-data" />
                                        </div>

                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.Telefono):
                                            <input asp-for="DatosBasicosPersonaViewModel.Telefono" readonly class="label-data" />
                                        </div>

                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.Edad):
                                            <input asp-for="DatosBasicosPersonaViewModel.Edad" readonly class="label-data" />
                                        </div>

                                        <!--
                                        <div class="labels">

                                            <input value="" readonly class="label-data" />
                                        </div>
                                            -->

                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.Genero):
                                            <input asp-for="DatosBasicosPersonaViewModel.Genero" readonly class="label-data" />
                                        </div>

                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.NivelEducativo):
                                            <input asp-for="DatosBasicosPersonaViewModel.NivelEducativo" readonly class="label-data" />
                                        </div>

                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.EstadoCivil):
                                            <input asp-for="DatosBasicosPersonaViewModel.EstadoCivil" readonly class="label-data" />
                                        </div>

                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.Profesion):
                                            <input asp-for="DatosBasicosPersonaViewModel.Profesion" readonly class="label-data" />
                                        </div>


                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.NumeroHijos):
                                            <input asp-for="DatosBasicosPersonaViewModel.NumeroHijos" readonly class="label-data" />
                                        </div>

                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.Etnia):
                                            <input asp-for="DatosBasicosPersonaViewModel.Etnia" readonly class="label-data" />
                                        </div>

                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.CondicionEspecial):
                                            <div class="cont-div">
                                                <input type="checkbox" asp-for="DatosBasicosPersonaViewModel.CondicionEspecial" onclick="return false;" />
                                            </div>
                                        </div>

                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.TipoDiscapacidad):
                                            <input asp-for="DatosBasicosPersonaViewModel.TipoDiscapacidad" readonly class="label-data" />
                                        </div>


                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.Conadis):
                                            <input asp-for="DatosBasicosPersonaViewModel.Conadis" readonly class="label-data" />
                                        </div>

                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.Porcentaje):
                                            <input asp-for="DatosBasicosPersonaViewModel.Porcentaje" readonly class="label-data" />
                                        </div>

                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.NombreCargoTrabajo):
                                            <input asp-for="DatosBasicosPersonaViewModel.NombreCargoTrabajo" readonly class="label-data" />
                                        </div>

                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.DescripcionPuestoTrabajo):
                                            <input asp-for="DatosBasicosPersonaViewModel.DescripcionPuestoTrabajo" readonly class="label-data" />
                                        </div>


                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.SedeTrabajo):
                                            <input asp-for="DatosBasicosPersonaViewModel.SedeTrabajo" readonly class="label-data" />
                                        </div>

                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.ContactoEmergencias):
                                            <input asp-for="DatosBasicosPersonaViewModel.ContactoEmergencias" readonly class="label-data" />
                                        </div>

                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.Parentesco):
                                            <input asp-for="DatosBasicosPersonaViewModel.Parentesco" readonly class="label-data" />
                                        </div>

                                        <div class="labels">
                                            @Html.DisplayNameFor(model => model.DatosBasicosPersonaViewModel.ParienteTelefono)
                                            <input asp-for="DatosBasicosPersonaViewModel.ParienteTelefono" readonly class="label-data" />
                                        </div>

                                        <br />
                                        &nbsp;
                                        <br />


                                    </section>


                                </section>


                            </div>

                        </div>

                    </div>

                </div>

            </article>

        </div>
        <!-- END ROW -->
    </section>

    <br />

    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">

        <div class="row">

            <a id="NuevaFicha" asp-controller="FichasMedicas" asp-action="Create" asp-route-id="@Model.DatosBasicosPersonaViewModel.IdPersona">
                <button type="button" asp-action="Create" class="btn btn-labeled btn-default" style="height:33px">
                    <span class="btn-label" style="bottom:0px;height:100%;">
                        <i class="glyphicon glyphicon-plus"></i>
                    </span>Nueva Ficha Médica

                </button>
            </a>

            &nbsp;

            <a id="NuevaFichaOdontologica" asp-controller="FichasMedicas" asp-action="FichaOdontologica" asp-route-id="@Model.DatosBasicosPersonaViewModel.IdPersona">
                <button type="button" asp-action="Create" class="btn btn-labeled btn-default" style="height:33px">
                    <span class="btn-label" style="bottom:0px;height:100%;">
                        <i class="glyphicon glyphicon-plus"></i>
                    </span>Ficha Odontológica

                </button>
            </a>

        </div>

        <div class="row">&nbsp;</div>

        </div>

        <br />

        <!-- widget grid -->
        <section id="tablaFichas" class="">
            <!-- row -->
            <div class="row">
                <!-- NEW WIDGET START -->
                <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <!-- Widget ID (each widget will need unique ID)-->
                    <div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-editbutton="false">
                        <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"

                    -->
                        <header id="table">
                            <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                            <h2>Fichas médicas</h2>
                        </header>
                        <!-- widget div-->
                        <div>
                            <!-- widget edit box -->
                            <div class="jarviswidget-editbox">
                                <!-- This area used as dropdown edit box -->
                            </div>
                            <!-- end widget edit box -->
                            <!-- widget content -->
                            |

                            <div class="widget-body no-padding">
                                <table id="datatable_fixed_column" class="table table-striped table-bordered table-hover" width="100%">
                                    <thead>
                                        <!--
                                    <tr>
                                        <th class="hasinput">
                                            <input type="text" class="form-control" placeholder="Buscar" />
                                        </th>

                                        <th>

                                        </th>

                                    </tr>
                                        -->
                                        <tr>

                                            <th data-class="expand" class="expand sorting_desc">
                                                @Html.DisplayNameFor(model => model.FichasMedicas.FirstOrDefault().FechaFichaMedica)

                                            </th>

                                            <th data-class="expand" class="expand sorting">
                                                @Html.DisplayNameFor(model => model.FichasMedicas.FirstOrDefault().IdFichaMedica)
                                            </th>

                                            <th data-class="expand" class="expand sorting">
                                                @Html.DisplayNameFor(model => model.FichasMedicas.FirstOrDefault().Estado)

                                            </th>

                                            <th>Opciones</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.FichasMedicas.OrderBy(x => x.FechaFichaMedica))
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.FechaFichaMedica)



                                            </td>

                                            <td>
                                                @Html.DisplayFor(modelItem => item.IdFichaMedica)
                                            </td>

                                            <td>
                                                @if (item.Estado == 1)
                                            {
                                                @: Finalizado
                                        }
                                        else
                                        {
                                            @: En edición
                                    }
                                            </td>

                                            <td>
                                                @Html.ActionLink("Editar", "CambiarEstado", new { id = item.IdFichaMedica, idFM = item.IdFichaMedica, idPer = item.IdPersona }, new { onclick = "espera()" }) |
                                                @Html.ActionLink("Eliminar", "Delete", new { id = item.IdFichaMedica, idFM = item.IdFichaMedica, idPer = item.IdPersona }, new { onclick = "return confirm('Desea eliminar el registro ?');" })
                                            </td>
                                        </tr>
                                }
                                    </tbody>
                                </table>
                            </div>
                            <!-- end widget content -->
                        </div>
                        <!-- end widget div -->
                    </div>

                </article>
                <!-- WIDGET END -->
            </div>
            <!-- end row -->
            <!-- end row -->
        </section>
        <!-- end widget grid -->








        <section id="pacientesSeccion" class="">
            <!-- row -->
            <div class="row">
                <!-- NEW WIDGET START -->
                <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <!-- Widget ID (each widget will need unique ID)-->
                    <div class="jarviswidget jarviswidget-color-darken" id="wid-id-1" data-widget-editbutton="false">
                        <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"

                    -->
                        <header id="table">
                            <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                            <h2>Pacientes</h2>
                        </header>
                        <!-- widget div-->
                        <div>
                            <!-- widget edit box -->
                            <div class="jarviswidget-editbox">
                                <!-- This area used as dropdown edit box -->
                            </div>
                            <!-- end widget edit box -->
                            <!-- widget content -->
                            |

                            <div class="widget-body no-padding">
                                <table id="dt_basic" class="table table-striped table-bordered table-hover" width="100%">
                                    <thead>
                                        <!--
                                    <tr>
                                        <th class="hasinput">
                                            <input type="text" class="form-control" placeholder="Buscar" />
                                        </th>

                                        <th>

                                        </th>

                                    </tr>
                                        -->
                                        <tr>

                                            <th data-class="expand">
                                                @Html.DisplayNameFor(model => model.ListaPersonas.FirstOrDefault().Nombres)
                                            </th>

                                            <th data-class="expand">
                                                @Html.DisplayNameFor(model => model.ListaPersonas.FirstOrDefault().Apellidos)
                                            </th>

                                            <th data-class="expand">
                                                @Html.DisplayNameFor(model => model.ListaPersonas.FirstOrDefault().Identificacion)

                                            </th>

                                            <th>Opciones</th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.ListaPersonas)
                                    {
                                        <tr>

                                            <td>
                                                @Html.DisplayFor(modelItem => item.Nombres)
                                            </td>

                                            <td>
                                                @Html.DisplayFor(modelItem => item.Apellidos)
                                            </td>

                                            <td>
                                                @Html.DisplayFor(modelItem => item.Identificacion)
                                            </td>



                                            <td>
                                                @Html.ActionLink("Ver", "SeleccionPaciente", new { id = item.Identificacion }, new { onclick = "espera()" })

                                                @*  @Html.ActionLink("Editar", "Edit", new { id = item.IdFichaMedica })  |
                                                @Html.ActionLink("Eliminar", "Delete", new { id = item.IdFichaMedica }, new { onclick = "return confirm('Desea eliminar el registro ?');" })
                                                *@
                                            </td>

                                        </tr>
                                }
                                    </tbody>
                                </table>
                            </div>
                            <!-- end widget content -->
                        </div>
                        <!-- end widget div -->
                    </div>

                </article>
                <!-- WIDGET END -->
            </div>
            <!-- end row -->
            <!-- end row -->
        </section>
        <!-- end widget grid -->

    </div>
<!-- END MAIN CONTENT -->

@section Scripts {
    <script src='~/js/datatables/init.js'></script>

    <link rel="stylesheet" href="~/lib/waitMe/waitMe.min.css" />
    <link rel="stylesheet" href="~/lib/waitMe/waitMe.css" />

    <script src='~/lib/waitMe/waitMe.min.js'></script>
    <script src='~/js/site.js'></script>

    <script>


        function NuevaFicha() {

            if (@Model.DatosBasicosPersonaViewModel.IdPersona > 0) {

                $("#NuevaFicha").show();
                $("#NuevaFichaOdontologica").show();
                

                $("#DatosPersonales").show();
                $("#DatosPersonales").css("visibility", "visible");

                $("#tablaFichas").show();
                $("#pacientesSeccion").hide();

                //habilitarBotones();

                $("#btn_0").css("background-color", "#3276b1");
                $("#btn_0").css("color", "white");

            } else {

                // cambiar a hide

                $("#NuevaFicha").hide();
                $("#NuevaFichaOdontologica").hide();

                $("#DatosPersonales").hide();
                $("#DatosPersonales").css("visibility" , "hidden");

                $("#tablaFichas").hide();

                $("#pacientesSeccion").show();

                //deshabilitarBotones();

                $("#btn_7").css("background-color", "#3276b1");
                $("#btn_7").css("color", "white");
            }

        }

        onload = function () {
            NuevaFicha();


        }



    </script>
}

